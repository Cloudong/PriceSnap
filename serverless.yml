# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: zziglet
# "app" enables Serverless Framework Dashboard features and sharing them with other Services.
app: pricesnap
# "service" is the name of this project. This will also be added to your AWS resource names.
service: team6

stages:
  default:
    params:
      tableName: "users-table-${sls:stage}"
      productsTableName: "products-table-${sls:stage}"  # 새로운 테이블 이름 파라미터 추가


provider:
  name: aws
  runtime: nodejs20.x
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [UsersTable, Arn]
            - Fn::GetAtt: [ProductsTable, Arn]  # 새로운 테이블의 ARN 추가
        - Effect: Allow
          Action:
            - execute-api:Invoke
          Resource:
            - "*"
  environment:
    USERS_TABLE: ${param:tableName}
    PRODUCTS_TABLE: ${param:productsTableName} # 새로운 환경 변수 추가
    SESSION_KEY: "session-key"
     
functions:
  api:
    handler: src/index.handler
    events:
      - httpApi:  # API Gateway의 httpApi 이벤트 사용
          path: /api/users  # 사용자 API 엔드포인트
          method: ANY  # 모든 메서드 허용
      - httpApi:
          path: /api/products
          method: ANY
      - httpApi:
          path: /api/carts
          method: ANY
      - httpApi:
          path: /api/budgets
          method: ANY

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${param:tableName}
    ProductsTable:  # 새로운 DynamoDB 테이블 리소스 추가
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: productId  # 새로운 속성 이름
            AttributeType: S
        KeySchema:
          - AttributeName: productId  # 새로운 키 스키마
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${param:productsTableName}  # 새로운 테이블 이름 사용
